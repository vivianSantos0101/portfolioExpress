<%- include('../partials/head') %>

<div class="binary-background-light">
  <div class="binary-rain" id="binaryRainLogin"></div>
</div>

<div class="min-h-screen flex items-center justify-center bg-transparent relative z-10">
  <div class="bg-[var(--navy-primary)] p-8 rounded-lg shadow-xl w-full max-w-sm border border-blue-900/50">
    <h1 class="text-2xl font-bold text-center text-white mb-6">Login Administrativo</h1>

    <% if (typeof error !== 'undefined' && error) { %>
      <div class="bg-red-200 border border-red-500 text-red-800 px-4 py-3 rounded relative mb-4" role="alert">
        <span class="block sm:inline"><%= error %></span>
      </div>
    <% } %>

    <form action="/login" method="POST">
      <div class="mb-4">
        <label for="password" class="block text-sm font-medium text-gray-200">Senha</label>
        <input
          type="password"
          name="password"
          id="password"
          required
          class="mt-1 block w-full rounded-md border shadow-sm focus:border-blue-300 focus:ring-blue-300 border-blue-300 bg-white text-gray-900"
        >
      </div>
      <div>
        <button
          type="submit"
          class="w-full bg-white text-[var(--navy-primary)] py-2 px-4 rounded-md font-medium hover:bg-gray-200 transition-colors duration-300 shadow-sm border border-gray-300"
        >
          Entrar
        </button>
      </div>
    </form>
     <div class="text-center mt-4">
        <a href="/" class="text-sm text-gray-300 hover:text-white">&larr; Voltar ao Portfólio</a>
      </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('binaryRainLogin');
    if (!container) {
      console.error("Elemento #binaryRainLogin não encontrado!");
      return;
    }
    const digits = ['0', '1'];
    function createDigit() {
      const digit = document.createElement('div');
      digit.className = 'binary-digit';
      digit.textContent = digits[Math.floor(Math.random() * digits.length)];
      digit.style.left = Math.random() * 100 + 'vw';
      const isFalling = Math.random() > 0.3;
      digit.style.animationName = isFalling ? 'fall-straight' : 'rise-straight';
      digit.style.animationDuration = (Math.random() * 20 + 10) + 's';
      digit.style.opacity = Math.random() * 0.15 + 0.05;
      digit.style.fontSize = (Math.random() * 8 + 12) + 'px';
      digit.style.fontWeight = Math.random() > 0.8 ? '600' : '300';
      digit.style.fontFamily = "'Courier New', monospace";
      container.appendChild(digit);
      setTimeout(() => {
        if (digit && digit.parentNode === container) {
          container.removeChild(digit);
        }
      }, parseFloat(digit.style.animationDuration) * 1000);
    }
    for (let i = 0; i < 60; i++) {
      setTimeout(createDigit, Math.random() * 2000);
    }
    const interval = setInterval(createDigit, 150);
  });
</script>

</body>
</html>